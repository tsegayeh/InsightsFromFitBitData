10/2
10/4
4/2
9/3
library(readxl)
heart_sample <- read_excel("C:/Users/Tsegaye Himbego/OneDrive/Desktop/EverythingDesktop/Data-Science/PredictingHeartDisease-ML-main/heart-sample.xlsx")
View(heart_sample)
heart_sample[Column1]
heart_sample
summary(heart_sample)
head(heart_sample)
sum(Column1)
sum(heart_sample.Column1)
4+5
5-4
10*2
install.packages("palmerpenguins")
library(palmerpenguins)
summary(penguins)
library(tidyverse)
?tidyverse
today()
now()
library(lubridate)
install.packages("lubridate")
today()
date()
Sys.time; Date
Sys.time
Sys.time()
DateTimeClasses()
d <- Sys.time()
DateTimeClasses(d)
ymd("2021-01-20")
ymd_hms("2021-01-20 20:11:59")
head(distanceDaily,2)
# 1 --- distance_a ---
distance_a <- distanceDaily
# 1.a
DistanceById <- distance_a %>%
group_by(Id) %>%
summarise(DistanceById = sum(round(TotalDistance))) # all the 31 days
fitbit7Vars <- list(fitbit5Vars, hrtRateById, SleepAmtById) %>%
reduce(full_join, by = "Id")
library(dplyr)
library(vtable)
library(tidyverse)
library(stringr)
library(tidyr)
library(cor_pmat)
library(ggcorrplot)
fitbit7Vars <- list(fitbit5Vars, hrtRateById, SleepAmtById) %>%
reduce(full_join, by = "Id")
fitbit7Vars <- list(fiveVarsByID.csv, hrtRateById, SleepAmtById) %>%
reduce(full_join, by = "Id")
setwd("~/GitHub/InsightsFromFitBitData")
fitbit7Vars <- list(fiveVarsByID.csv, hrtRateById, SleepAmtById) %>%
reduce(full_join, by = "Id")
fiveVarsByID
fiveVarsByID <- read.csv("fiveVarsByID.csv")
head(fiveVarsByID,2)
fiveVarsByID
hrtRateById
SleepAmtById
fiveVarsByID
fitbit7Vars <- list(fiveVarsByID, dfhrtRateById, dfSleepAmtById) %>%
reduce(full_join, by = "Id")
dfhrtRateById <- read.csv("hrtRateById.csv")
dfhrtRateById
fitbit7Vars <- list(fiveVarsByID, dfhrtRateById, dfSleepAmtById) %>%
reduce(full_join, by = "Id")
dfSleepAmtById <- read.csv("SleepAmtById.csv")
fitbit7Vars <- list(fiveVarsByID, dfhrtRateById, dfSleepAmtById) %>%
reduce(full_join, by = "Id")
write.csv(fitbit7Vars, "sevenVarsByID.csv", row.names = FALSE)
sevenVarsByID <- read.csv("sevenVarsByID.csv")
head(sevenVarsByID,2)
summary(sevenVarsByID)
#Only use  TotalMinutesAsleep from dfSleepAmtById
sevenVarsByID <- dfSleepAmtById[-c(8,10)]
sevenVarsByID
#Only use  TotalMinutesAsleep from dfSleepAmtById
sevenVarsByID <- dfSleepAmtById[-c(8,10)]
sevenVarsByID
sevenVarsByID
fitbit7Vars <- list(fiveVarsByID, dfhrtRateById, dfSleepAmtById) %>%
reduce(full_join, by = "Id")
write.csv(fitbit7Vars, "sevenVarsByID.csv", row.names = FALSE)
sevenVarsByID <- read.csv("sevenVarsByID.csv")
head(sevenVarsByID,2)
#Only use  TotalMinutesAsleep from dfSleepAmtById
sevenVarsByID <- sevenVarsByID[-c(8,10)]
sevenVarsByID
# See P matrix values
options( scipen = 999 )
p.mat <-  cor_pmat(sevenVarsByID[-1])
head(p.mat)
# Plot corr
corr <- round(cor(sevenVarsByID[-1]), 1)
cor_sevenVarsByID <- ggcorrplot(corr, hc.order = TRUE, type = "lower",
lab = TRUE)
library(WGCNA)
# install.packages("dplyr")
# install.packages("vtable")
# install.packages("tidyverse")
# install.packages("stringr")
# install.packages("tidyr")
# install.packages("cor_pmat")
# install.packages(ggcorrplot)
install.packages("WGCNA")
library(dplyr)
library(WGCNA)
corAndPvalue(sevenVarsByID, method='spearman')
install.packages("corAndPvalue")
corAndPvalue(sevenVarsByID)
p.mat <-  cor_pmat(sevenVarsByID[-1])
head(p.mat)
# Plot corr
corr <- round(cor(sevenVarsByID[-1]), 1)
cor_sevenVarsByID <- ggcorrplot(corr, hc.order = TRUE, type = "lower",
lab = TRUE)
# generate random data with non-zero correlation
set.seed(1);
a = rnorm(100);
b = rnorm(100) + a;
x = cbind(a, b);
# Call the function and display all results
corAndPvalue(x)
library(WGCNA)
# Call the function and display all results
corAndPvalue(x)
install.packages("corAndPvalue")
corAndPvalue(sevenVarsByID)
cor(fiveVarsByID, dfhrtRateById, dfSleepAmtById, use="complete.obs")
cor(fiveVarsByID, dfhrtRateById, use="complete.obs")
p.mat <-  cor_pmat(sevenVarsByID[-1])
head(p.mat)
# Plot corr
corr <- round(cor(sevenVarsByID[-1]), 1)
cor_sevenVarsByID <- ggcorrplot(corr, hc.order = TRUE, type = "lower",
lab = TRUE)
p.mat <-  cor_pmat(sevenVarsByID[-1])
head(p.mat)
# Plot corr
corr <- round(cor(sevenVarsByID[-1]), 1)
cor_sevenVarsByID <- ggcorrplot(corr, hc.order = TRUE, type = "lower",
lab = TRUE)
